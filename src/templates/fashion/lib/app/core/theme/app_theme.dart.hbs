import 'package:flutter/material.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/app_colors_data.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/app_color_extension.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/ui_config.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/app_typography.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/app_typography_extension.dart';

class AppTheme {
  // Light theme colors based on config
  static const lightColors = AppColorsData(
    background: Color(0xFF{{design.lightTheme.backgroundColor.substring(1)}}),
    foreground: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    primary: Color(0xFF{{design.lightTheme.primaryColor.substring(1)}}),
    primaryForeground: Color(0xFF{{design.lightTheme.primaryForegroundColor.substring(1)}}),
    secondary: Color(0xFFd38d56), // Use card color as secondary
    secondaryForeground: Color(0xFF{{design.lightTheme.cardForegroundColor.substring(1)}}),
    accent: Color(0xFF{{design.lightTheme.primaryColor.substring(1)}}), // Use primary color as accent
    accentForeground: Color(0xFF{{design.lightTheme.primaryForegroundColor.substring(1)}}),
    muted: Color(0xFF{{design.lightTheme.mutedColor.substring(1)}}),
    mutedForeground: Color(0xFF{{design.lightTheme.mutedForegroundColor.substring(1)}}),
    card: Color(0xFF{{design.lightTheme.cardColor.substring(1)}}),
    cardForeground: Color(0xFF{{design.lightTheme.cardForegroundColor.substring(1)}}),
    border: Color(0xFF{{design.lightTheme.borderColor.substring(1)}}),
    input: Color(0xFF{{design.lightTheme.inputColor.substring(1)}}),
    inputForeground: Color(0xFF{{design.lightTheme.inputForegroundColor.substring(1)}}),
    destructive: Color(0xFFFF0000), // Keep default destructive color
    destructiveForeground: Color(0xFFFFFFFF), // Keep default destructive foreground
    productCard: Color(0xFF{{design.lightTheme.cardColor.substring(1)}}), // Use card color for product card
  );

  // Dark theme colors based on config
  static const darkColors = AppColorsData(
    background: Color(0xFF{{design.darkTheme.backgroundColor.substring(1)}}),
    foreground: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    primary: Color(0xFF{{design.darkTheme.primaryColor.substring(1)}}),
    primaryForeground: Color(0xFF{{design.darkTheme.primaryForegroundColor.substring(1)}}),
    secondary: Color(0xFF{{design.darkTheme.cardColor.substring(1)}}), // Use card color as secondary
    secondaryForeground: Color(0xFF{{design.darkTheme.cardForegroundColor.substring(1)}}),
    accent: Color(0xFF{{design.darkTheme.primaryColor.substring(1)}}), // Use primary color as accent
    accentForeground: Color(0xFF{{design.darkTheme.primaryForegroundColor.substring(1)}}),
    muted: Color(0xFF{{design.darkTheme.mutedColor.substring(1)}}),
    mutedForeground: Color(0xFF{{design.darkTheme.mutedForegroundColor.substring(1)}}),
    card: Color(0xFF{{design.darkTheme.cardColor.substring(1)}}),
    cardForeground: Color(0xFF{{design.darkTheme.cardForegroundColor.substring(1)}}),
    border: Color(0xFF{{design.darkTheme.borderColor.substring(1)}}),
    input: Color(0xFF{{design.darkTheme.inputColor.substring(1)}}),
    inputForeground: Color(0xFF{{design.darkTheme.inputForegroundColor.substring(1)}}),
    destructive: Color(0xFFff1a1a), // Keep default destructive color
    destructiveForeground: Color(0xFFFFFFFF), // Keep default destructive foreground
    productCard: Color(0xFF{{design.darkTheme.cardColor.substring(1)}}), // Use card color for product card
  );

  // Light theme text styles
  static const lightTextStyles = AppTextStylesData(
    h1: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSize3XLarge,
      fontWeight: AppTypography.bold,
      letterSpacing: AppTypography.letterSpacingTight,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    h2: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSize2XLarge,
      fontWeight: AppTypography.bold,
      letterSpacing: AppTypography.letterSpacingTight,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    h3: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeXLarge,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    h4: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeLarge,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    h5: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    subtitle1: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    subtitle2: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    bodyLarge: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    bodyMedium: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    bodySmall: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    buttonText: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingWide,
      color: Color(0xFF{{design.lightTheme.foregroundColor.substring(1)}}),
    ),
    caption: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.lightTheme.mutedForegroundColor.substring(1)}}),
    ),
    overline: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingWide,
      color: Color(0xFF{{design.lightTheme.mutedForegroundColor.substring(1)}}),
      height: 1.5,
    ),
  );
  
  // Dark theme text styles
  static const darkTextStyles = AppTextStylesData(
    h1: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSize3XLarge,
      fontWeight: AppTypography.bold,
      letterSpacing: AppTypography.letterSpacingTight,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    h2: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSize2XLarge,
      fontWeight: AppTypography.bold,
      letterSpacing: AppTypography.letterSpacingTight,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    h3: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeXLarge,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    h4: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeLarge,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    h5: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.semiBold,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    subtitle1: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    subtitle2: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    bodyLarge: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeMedium,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    bodyMedium: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    bodySmall: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      height: AppTypography.lineHeightNormal,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    buttonText: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeRegular,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingWide,
      color: Color(0xFF{{design.darkTheme.foregroundColor.substring(1)}}),
    ),
    caption: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.regular,
      letterSpacing: AppTypography.letterSpacingNormal,
      color: Color(0xFF{{design.darkTheme.mutedForegroundColor.substring(1)}}),
    ),
    overline: TextStyle(
      fontFamily: AppTypography.primaryFont,
      fontSize: UIConfig.fontSizeSmall,
      fontWeight: AppTypography.medium,
      letterSpacing: AppTypography.letterSpacingWide,
      color: Color(0xFF{{design.darkTheme.mutedForegroundColor.substring(1)}}),
      height: 1.5,
    ),
  );

  // Light theme
  static ThemeData light() {
    return _createTheme(lightColors, lightTextStyles);
  }

  // Dark theme
  static ThemeData dark() {
    return _createTheme(darkColors, darkTextStyles);
  }

  // Helper method to create ThemeData
  static ThemeData _createTheme(
    AppColorsData colors,
    AppTextStylesData textStyles,
    double borderRadius,
  ) {
    return ThemeData(
      brightness:
          colors.background.computeLuminance() > 0.5
              ? Brightness.light
              : Brightness.dark,
      primaryColor: colors.primary,
      scaffoldBackgroundColor: colors.background,
      cardColor: colors.card,
      dividerColor: colors.border,
      colorScheme: ColorScheme(
        primary: colors.primary,
        secondary: colors.secondary,
        surface: colors.background,
        error: colors.destructive,
        onPrimary: colors.primaryForeground,
        onSecondary: colors.secondaryForeground,
        onSurface: colors.foreground,
        onError: colors.destructiveForeground,
        brightness:
            colors.background.computeLuminance() > 0.5
                ? Brightness.light
                : Brightness.dark,
      ),

      // global input decoration theme
      inputDecorationTheme: InputDecorationTheme(
        contentPadding: const EdgeInsets.symmetric(
          horizontal: UIConfig.paddingLarge,
          vertical: UIConfig.paddingSmall,
        ),
        hintStyle: textStyles.bodyMedium.copyWith(
          color: colors.mutedForeground,
        ),
        fillColor: colors.input,
        filled: true,
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular({{ design.radius}}),
          borderSide: BorderSide.none,
        ),
        enabledBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular({{ design.radius}}),
          borderSide: BorderSide.none,
        ),
        focusedBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular({{ design.radius}}),
          borderSide: BorderSide(color: colors.primary),
        ),
        errorBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular({{ design.radius}}),
          borderSide: BorderSide(color: colors.destructive),
        ),
      ),

      // Add global button themes
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular({{ design.radius}}),
          ),
          padding: const EdgeInsets.symmetric(
            vertical: UIConfig.paddingMedium,
            horizontal: UIConfig.paddingLarge,
          ),
          disabledBackgroundColor: colors.muted,
        ),
      ),

      textButtonTheme: TextButtonThemeData(
        style: TextButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular({{ design.radius}}),
          ),
        ),
      ),

      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular({{ design.radius}}),
          ),
          padding: const EdgeInsets.symmetric(
            vertical: UIConfig.paddingMedium,
            horizontal: UIConfig.paddingLarge,
          ),
        ),
      ),

      // Add text theme
      textTheme: TextTheme(
        displayLarge: textStyles.h1,
        displayMedium: textStyles.h2,
        displaySmall: textStyles.h3,
        headlineMedium: textStyles.h4,
        headlineSmall: textStyles.h5,
        titleLarge: textStyles.subtitle1,
        titleMedium: textStyles.subtitle2,
        bodyLarge: textStyles.bodyLarge,
        bodyMedium: textStyles.bodyMedium,
        bodySmall: textStyles.bodySmall,
        labelLarge: textStyles.buttonText,
        labelSmall: textStyles.overline,
      ),

      extensions: [
        AppColorExtension.fromAppColorsData(colors),
        AppTypographyExtension.fromAppTextStylesData(textStyles),
      ],
    );
  }
}