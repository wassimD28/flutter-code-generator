import 'package:get/get.dart';
import 'package:{{ snakeCase appName }}/app/core/middlewares/auth_middleware.dart';
import 'package:{{ snakeCase appName }}/features/address/view/edit_address_page.dart';
import 'package:{{ snakeCase appName }}/features/auth/binding/auth_binding.dart';
import 'package:{{ snakeCase appName }}/features/cart/binding/cart_binding.dart';
import 'package:{{ snakeCase appName }}/features/category/binding/category_binding.dart';
import 'package:{{ snakeCase appName }}/features/category/controllers/category_controller.dart';
import 'package:{{ snakeCase appName }}/features/category_product/binding/category_product_binding.dart';
import 'package:{{ snakeCase appName }}/features/category_product/view/screen/category_products_screen.dart';
import 'package:{{ snakeCase appName }}/features/home/binding/home_binding.dart';
import 'package:{{ snakeCase appName }}/app/core/config/routes_config.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/email_confirmation_screen.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/forget_password_screen.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/login_screen.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/signup_screen.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/otp_verification_screen.dart';
import 'package:{{ snakeCase appName }}/features/auth/views/screen/new_reset_password_screen.dart';
import 'package:{{ snakeCase appName }}/features/cart/views/screen/cart_screen.dart';
import 'package:{{ snakeCase appName }}/features/category/views/category_screen.dart';
import 'package:{{ snakeCase appName }}/features/home/views/screen/home_screen.dart';
import 'package:{{ snakeCase appName }}/features/language/language_binding.dart';
import 'package:{{ snakeCase appName }}/features/language/views/language_screen.dart';
import 'package:{{ snakeCase appName }}/features/onBoarding/views/onboarding_screen.dart';
import 'package:{{ snakeCase appName }}/features/onBoarding/views/profile_setup_screen.dart';
import 'package:{{ snakeCase appName }}/features/order/binding/order_binding.dart';
import 'package:{{ snakeCase appName }}/features/product/binding/product_binding.dart';
import 'package:{{ snakeCase appName }}/features/filter/controllers/product_filter_controller.dart';
import 'package:{{ snakeCase appName }}/features/product/controllers/product_list_controller.dart';
import 'package:{{ snakeCase appName }}/features/filter/view/screen/filter_product_sheet.dart';
import 'package:{{ snakeCase appName }}/features/product/views/screens/product_detail_screen.dart';
import 'package:{{ snakeCase appName }}/features/product/views/screens/product_list_screen.dart';
import 'package:{{ snakeCase appName }}/features/profile/bindings/edit_profile_binding.dart';
import 'package:{{ snakeCase appName }}/features/profile/bindings/profile_binding.dart';
import 'package:{{ snakeCase appName }}/features/address/view/add_address.dart';
import 'package:{{ snakeCase appName }}/features/address/view/address_screen.dart';
import 'package:{{ snakeCase appName }}/features/profile/views/screens/edit_profile_screen.dart';
import 'package:{{ snakeCase appName }}/features/notifications/views/notification_screen.dart';
import 'package:{{ snakeCase appName }}/features/order/view/screen/orders_details_screen.dart';
import 'package:{{ snakeCase appName }}/features/order/view/screen/orders_screen.dart';
import 'package:{{ snakeCase appName }}/features/order/view/screen/order_confirmation_screen.dart';
import 'package:{{ snakeCase appName }}/app/screens/order_failure_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/add_card_page.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/payment_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/payment_history_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/payment_success_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/payment_failure_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/binding/payment_binding.dart';
import 'package:{{ snakeCase appName }}/features/profile/views/screens/profile_screen.dart';
import 'package:{{ snakeCase appName }}/app/shared/layouts/main_container_screen.dart';
import 'package:{{ snakeCase appName }}/app/shared/screens/splash_screen.dart';
import 'package:{{ snakeCase appName }}/features/promotion/models/promotion_model.dart';
import 'package:{{ snakeCase appName }}/features/promotion/views/widgets/promotion_product_page.dart';
import 'package:{{ snakeCase appName }}/features/review/binding/review_binding.dart';
import 'package:{{ snakeCase appName }}/features/settings/views/setting_screen.dart';
import 'package:{{ snakeCase appName }}/features/subcategory/controllers/subcategory_controller.dart';
import 'package:{{ snakeCase appName }}/features/settings/views/settings_language_screen.dart';
import 'package:{{ snakeCase appName }}/features/settings/bindings/settings_language_binding.dart';
import 'package:{{ snakeCase appName }}/features/wishlist/views/wishlist_screen.dart';
import 'package:{{ snakeCase appName }}/features/wishlist/binding/wishlist_binding.dart';
import 'package:{{ snakeCase appName }}/features/checkout/binding/checkout_binding.dart';
import 'package:{{ snakeCase appName }}/features/checkout/views/screens/checkout_screen.dart';
import 'package:{{ snakeCase appName }}/features/payment/view/screen/payment_processing_screen.dart';

List<GetPage<dynamic>>? routes = [
  GetPage(name: '/', page: () => const SplashScreen()),

  // Protected routes with middleware
  GetPage(
    name: AppRoute.mainContainer,
    page: () => MainContainerScreen(),
    binding: HomeBinding(),
    middlewares: [AuthMiddleware()],
  ),
  GetPage(
    name: AppRoute.language,
    page: () => const LanguageScreen(),
    binding: LanguageBinding(),
  ),

  GetPage(
    name: AppRoute.settingsLanguage,
    page: () => const SettingsLanguageScreen(),
    binding: SettingsLanguageBinding(),
  ),

  GetPage(
    name: AppRoute.settings,
    page: () => const SettingsScreen(),
    binding: HomeBinding(),
  ),

  // OnBoarding
  GetPage(name: AppRoute.onBoarding, page: () => Onboarding()),
  GetPage(
    name: AppRoute.profileSetup,
    page: () => const ProfileSetupScreen(),
    binding: AuthBinding(),
  ),

  // Auth
  GetPage(name: AppRoute.login, page: () => Login(), binding: AuthBinding()),
  GetPage(
    name: AppRoute.signup,
    page: () => const Signup(),
    binding: AuthBinding(),
  ),
  GetPage(
    name: AppRoute.forgetPassword,
    page: () => ForgetPasswordScreen(),
    binding: AuthBinding(),
  ),
  GetPage(
    name: AppRoute.verifyOtp,
    page: () => OtpVerificationScreen(),
    binding: AuthBinding(),
  ),
  GetPage(
    name: AppRoute.resetPasswordNew,
    page: () => NewResetPasswordScreen(),
    binding: AuthBinding(),
  ),
  GetPage(
    name: AppRoute.emailResetPasswordConfirmation,
    page: () => const EmailSentConfirmationResetPassword(),
    binding: AuthBinding(),
  ),

  // HOME
  GetPage(
    name: AppRoute.home,
    page: () => HomeScreen(),
    bindings: [HomeBinding(), CategoryBinding()],
  ),

  // Categories
  GetPage(
    name: AppRoute.categories,
    page: () => CategoryScreen(),
    binding: CategoryBinding(),
  ),

  // Products
  GetPage(
    name: AppRoute.productDetail,
    page: () {
      final id = Get.parameters['id'] ?? '';
      return ProductDetailScreen(productId: id);
    },
    binding: ProductBinding(),
  ),

  // New Product List Route
  GetPage(
    name: AppRoute.products,
    page: () => ProductListScreen(),
    binding: ProductBinding(),
  ),

  // Reviews
  GetPage(
    name: AppRoute.reviews,
    page: () {
      final productId = Get.parameters['productId'] ?? '';
      return ProductDetailScreen(
        productId: productId,
      ); // Adjust if you have a ReviewScreen
    },
    bindings: [ProductBinding(), ReviewBinding()],
  ),

  GetPage(
    name: AppRoute.wishlist,
    page: () => WishlistPage(),
    binding: WishlistBinding(),
  ),
  GetPage(
    name: AppRoute.cart,
    page: () => CartScreen(),
    binding: CartBinding(),
  ),
  GetPage(
    name: AppRoute.profile,
    page: () => const ProfilePage(),
    binding: ProfileBinding(),
    middlewares: [AuthMiddleware()],
  ),
  GetPage(
    name: AppRoute.editProfile,
    page: () => EditProfilePage(),
    binding: EditProfileBinding(),
  ),
  GetPage(
    name: AppRoute.checkout,
    page: () => const CheckoutScreen(),
    binding: CheckoutBinding(),
  ),
  GetPage(
    name: AppRoute.paymentProcessing,
    page: () => const PaymentProcessingScreen(),
    binding: CheckoutBinding(),
  ),
  GetPage(
    name: AppRoute.orderConfirmation,
    page: () => const OrderConfirmationScreen(),
    binding: OrderBinding(),
  ),
  GetPage(
    name: AppRoute.orderFailure,
    page: () => const OrderFailureScreen(),
    binding: OrderBinding(),
  ),
  GetPage(
    name: AppRoute.address,
    page: () => AddressPage(),
    binding: HomeBinding(),
  ),
  GetPage(
    name: AppRoute.addAddress,
    page: () => AddAddressPage(),
    binding: HomeBinding(),
  ),
  GetPage(
    name: AppRoute.editAddress,
    page: () => EditAddressPage(),
    binding: HomeBinding(),
  ),
  GetPage(
    name: AppRoute.payments,
    page: () => const PaymentMethodPage(),
    binding: PaymentBinding(),
  ),
  GetPage(
    name: AppRoute.addPayment,
    page: () => const AddCardPage(),
    binding: PaymentBinding(),
  ),
  GetPage(
    name: AppRoute.paymentHistory,
    page: () => const PaymentHistoryScreen(),
    binding: PaymentBinding(),
  ),
  GetPage(
    name: AppRoute.paymentSuccess,
    page: () => const PaymentSuccessScreen(),
    binding: PaymentBinding(),
  ),
  GetPage(
    name: AppRoute.paymentFailure,
    page: () => const PaymentFailureScreen(),
    binding: PaymentBinding(),
  ),
  GetPage(
    name: AppRoute.orders,
    page: () => OrdersPage(),
    binding: OrderBinding(),
  ),
  GetPage(
    name: AppRoute.orderDetails,
    page: () => const OrderDetailsPage(),
    binding: OrderBinding(),
  ),
  GetPage(
    name: AppRoute.notifications,
    page: () => NotificationsPage(),
    binding: HomeBinding(),
  ),
  GetPage(
    name: AppRoute.categoryDetail,
    page: () => CategoryProductsScreen(),
    transition: Transition.cupertino,
    binding: CategoryProductsBinding() as Bindings,
  ),
  GetPage(
    name: AppRoute.filter,
    page:
        () => FilterBottomSheet(
          listController: Get.find<ProductListController>(),
          filterController: Get.find<ProductFilterController>(),
          categoryController: Get.find<CategoryController>(),
          subcategoryController: Get.find<SubcategoryController>(),
        ),
    transition: Transition.cupertino,
    binding: CategoryProductsBinding() as Bindings,
  ),
  GetPage(
      name: AppRoute.promotionProducts,
      page: () {
        final Promotion promotion = Get.arguments as Promotion;
        return PromotionProductsPage(promotion: promotion);
      },
      transition: Transition.rightToLeft,
      transitionDuration: const Duration(milliseconds: 300),
    ),
];

