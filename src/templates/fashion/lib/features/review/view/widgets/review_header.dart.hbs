import 'package:flutter/material.dart';
import 'package:{{ snakeCase appName }}/app/core/theme/app_theme_colors.dart';
import 'package:{{ snakeCase appName }}/features/review/model/review_model.dart';
import 'package:{{ snakeCase appName }}/app/core/localization/translation_extension.dart';
import 'package:{{ snakeCase appName }}/app/core/localization/localization_service.dart';

class ReviewHeader extends StatelessWidget {
  final double averageRating;
  final List<Review> reviews;

  const ReviewHeader({
    super.key,
    required this.averageRating,
    required this.reviews,
  });

  @override
  Widget build(BuildContext context) {
    final bool isRtl = LocalizationService.isRtl(context);

    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: AppColors.background(context),
        border: Border(bottom: BorderSide(color: AppColors.border(context))),
      ),
      child: Row(
        textDirection: isRtl ? TextDirection.rtl : TextDirection.ltr,
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: AppColors.card(context),
              borderRadius: BorderRadius.circular(12),
              border: Border.all(color: AppColors.border(context)),
            ),
            child: Column(
              crossAxisAlignment:
                  isRtl ? CrossAxisAlignment.end : CrossAxisAlignment.start,
              children: [
                Text(
                  averageRating.toStringAsFixed(1),
                  style: LocalizationService.getLocalizedTextStyle(
                    context,
                    TextStyle(
                      fontSize: 36,
                      fontWeight: FontWeight.bold,
                      fontFamily: 'Poppins',
                      color: AppColors.foreground(context),
                    ),
                  ),
                ),
                const SizedBox(height: 4),
                Row(
                  textDirection: isRtl ? TextDirection.rtl : TextDirection.ltr,
                  children: List.generate(5, (index) {
                    return Icon(
                      index < averageRating.round()
                          ? Icons.star_rounded
                          : Icons.star_outline_rounded,
                      size: 18,
                      color: AppColors.accent(context),
                    );
                  }),
                ),
                const SizedBox(height: 6),
                Text(
                  '${reviews.length} ${reviews.length == 1 ? 'reviews.review_singular'.translate() : 'reviews.review_plural'.translate()}',
                  style: LocalizationService.getLocalizedTextStyle(
                    context,
                    TextStyle(
                      fontSize: 12,
                      color: AppColors.mutedForeground(context),
                      fontFamily: 'Poppins',
                    ),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(width: 20),
          Expanded(
            child: Column(
              crossAxisAlignment:
                  isRtl ? CrossAxisAlignment.end : CrossAxisAlignment.start,
              children: List.generate(5, (index) {
                final ratingCount = 5 - index;
                final reviewsWithThisRating =
                    reviews.where((r) => r.rating == ratingCount).length;
                final percentage =
                    reviews.isEmpty
                        ? 0.0
                        : reviewsWithThisRating / reviews.length;

                return Padding(
                  padding: const EdgeInsets.symmetric(vertical: 3.0),
                  child: Row(
                    textDirection:
                        isRtl ? TextDirection.rtl : TextDirection.ltr,
                    children: [
                      SizedBox(
                        width: 12,
                        child: Text(
                          '$ratingCount',
                          style: LocalizationService.getLocalizedTextStyle(
                            context,
                            TextStyle(
                              fontSize: 12,
                              fontWeight: FontWeight.w500,
                              color: AppColors.mutedForeground(context),
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(width: 8),
                      Expanded(
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(4),
                          child: LinearProgressIndicator(
                            value: percentage,
                            backgroundColor: AppColors.muted(context),
                            valueColor: AlwaysStoppedAnimation<Color>(
                              AppColors.accent(context),
                            ),
                            minHeight: 8,
                          ),
                        ),
                      ),
                      const SizedBox(width: 8),
                      SizedBox(
                        width: 20,
                        child: Text(
                          '$reviewsWithThisRating',
                          style: LocalizationService.getLocalizedTextStyle(
                            context,
                            TextStyle(
                              fontSize: 12,
                              color: AppColors.mutedForeground(context),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                );
              }),
            ),
          ),
        ],
      ),
    );
  }
}

